#!/bin/bash
set -e


userConfPath="/etc/sftp-users.conf"
userConfFinalPath="/var/run/sftp-users.conf"

function printHelp() {
    echo "Add users as command arguments, STDIN or mounted in $userConfPath"
    echo "Syntax: user:pass[:e][:uid[:gid]]..."
    echo "Use --readme for more information and examples."
}

function printReadme() {
    echo "TIP: Read this in HTML format here: https://github.com/atmoz/sftp"
}

function configUser() {
  IFS=':' read -a param <<< $@
  pass="${param[0]}"
  port="${param[1]}"
  mkdir -p $HOME/.ssh
  echo -e  "sshconfig\n$pass\n$pass" | passwd || exit 3
  if [ -z "$port" ]; then
    echo "10022"
  else
    echo $port
  fi
}
function createUser() {
    IFS=':' read -a param <<< $@
    user="${param[0]}"
    pass="${param[1]}"

    if [ "${param[2]}" == "e" ]; then
        chpasswdOptions="-e"
        uid="${param[3]}"
        gid="${param[4]}"
    else
        uid="${param[2]}"
        gid="${param[3]}"
    fi

    if [ -z "$user" ]; then
        echo "FATAL: You must at least provide a username."
        exit 1
    fi

    if [ -z "$HOME" ]; then
        export HOME=/home/$user
    fi

    if $(cat /etc/passwd | cut -d: -f1 | grep -q "$user"); then
        echo "FATAL: User \"$user\" already exists."
        exit 2
    fi

    useraddOptions=" -D "

    if [ -n "$uid" ]; then
        useraddOptions="$useraddOptions -u $uid"
    fi

    if [ -n "$gid" ]; then
        if ! $(cat /etc/group | cut -d: -f3 | grep -q "$gid"); then
            addgroup -g $gid $gid
        fi

        useraddOptions="$useraddOptions -G $gid -h $HOME"
    fi

    adduser $useraddOptions $user
    mkdir -p $HOME
    chown root:root $HOME
    chmod 755 $HOME

    if [ ! -d "/home/$user" ]; then
        ln -s $HOME /home/$user
    fi

    if [ -z "$pass" ]; then
        pass="$(tr -dc A-Za-z0-9 </dev/urandom | head -c256)"
        chpasswdOptions=""
    fi

    echo "$user:$pass" | chpasswd $chpasswdOptions

    # Add SSH keys to authorized_keys with valid permissions
    if [ -d $HOME/.ssh/keys ]; then
        cat $HOME/.ssh/keys/* >> $HOME/.ssh/authorized_keys
        chown $user $HOME/.ssh/authorized_keys
        chmod 600 $HOME/.ssh/authorized_keys
    fi
}

if [[ $1 =~ ^--help$|^-h$ ]]; then
    printHelp
    exit 0
fi

if [ "$1" == "--readme" ]; then
    printReadme
    exit 0
fi

ftpcommand="ForceCommand /usr/lib/ssh/sftp-server"

if [ "$SSH" == "yes" ]; then
	ftpcommand=" "
fi

# Create users only on first run
if [ ! -f "$userConfFinalPath" &&  "$(whoami)" == "root" ]; then

    cat > /etc/ssh/sshd_config << SSHCONFIG
UseDNS no
PermitRootLogin no
Subsystem sftp /usr/lib/ssh/sftp-server
X11Forwarding no
AllowTcpForwarding no
$ftpcommand
SSHCONFIG

    # Append mounted config to final config
    if [ -f "$userConfPath" ]; then
        cat "$userConfPath" | grep -v -e '^$' > "$userConfFinalPath"
    fi

    # Append users from arguments to final config
    for user in "$@"; do
        echo "$user" >> "$userConfFinalPath"
    done

    # Append users from STDIN to final config
    if [ ! -t 0 ]; then
        while IFS= read -r user || [[ -n "$user" ]]; do
            echo "$user" >> "$userConfFinalPath"
        done
    fi

    # Check that we have users in config
    if [ "$(cat "$userConfFinalPath" | wc -l)" == 0 ]; then
        echo "FATAL: No users provided!"
        printHelp
        exit 3
    fi

    # Import users from final conf file
    while IFS= read -r user || [[ -n "$user" ]]; do
        createUser "$user"
    done < "$userConfFinalPath"

    # Generate unique ssh keys for this container
    ssh-keygen -A || return 1

else
  $userConfFinalPath="$HOME/.ssh/sftp-users.conf"
  if [ ! -f "$userConfFinalPath" ]; then
    mkdir -p $HOME/.ssh
    config="/etc/ssh/sshd_config"
    port="22"
    pidfile="/var/run/sshd.pid"
    keyfile="/etc/ssh/ssh_host_rsa_key"

    # Append mounted config to final config
    if [ -f "$userConfPath" ]; then
        cat "$userConfPath" | grep -v -e '^$' > "$userConfFinalPath"
    fi

    if
    # Append users from arguments to final config
    for user in "$@"; do
        echo "$user" >> "$userConfFinalPath"
    done

    # Append users from STDIN to final config
    if [ ! -t 0 ]; then
        while IFS= read -r user || [[ -n "$user" ]]; do
            echo "$user" >> "$userConfFinalPath"
        done
    fi

    config="$HOME/.ssh/sshd_config"
    port="10022"
    pidfile="$HOME/.ssh/pid"
    keyfile="$HOME/.ssh/ssh_host_rsa_key"
    ssh-keygen -t rsa -f $keyfile -N ''
    # Import users from final conf file
    while IFS= read -r user || [[ -n "$user" ]]; do
        port=$(configUser "$user")
        break
    done < "$userConfFinalPath"
    cat > $config << SSHCONFIG
UseDNS no
PermitRootLogin no
Subsystem sftp /usr/lib/ssh/sftp-server
X11Forwarding no
AllowTcpForwarding no
#UsePam no
UsePrivilegeSeparation no
Port $port
PidFile $pidfile
HostKey $keyfile
$ftpcommand
SSHCONFIG
  fi
fi

# Source custom scripts, if any
if [ -d /etc/sftp.d ]; then
    for f in /etc/sftp.d/*; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi
